diff -Naur a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	1969-12-31 16:00:00.000000000 -0800
+++ b/CMakeLists.txt	2020-04-30 08:06:29.809071505 -0700
@@ -0,0 +1,22 @@
+cmake_minimum_required(VERSION 3.1)
+project(crossguid)
+
+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})
+
+add_library(${PROJECT_NAME} guid.cpp)
+set_target_properties(${PROJECT_NAME} PROPERTIES CXX_STANDARD 11
+                                                 CXX_STANDARD_REQUIRED True
+                                                 CXX_EXTENSIONS False)
+
+if(UNIX AND NOT APPLE)
+  find_package(UUID REQUIRED)
+  target_link_libraries(${PROJECT_NAME} PRIVATE UUID::UUID)
+  target_compile_definitions(${PROJECT_NAME} PRIVATE GUID_LIBUUID)
+elseif(APPLE)
+  target_compile_definitions(${PROJECT_NAME} PRIVATE GUID_CFUUID)
+elseif(WIN32)
+  target_compile_definitions(${PROJECT_NAME} PRIVATE GUID_WINDOWS)
+endif()
+
+install(TARGETS ${PROJECT_NAME} DESTINATION lib)
+install(FILES guid.h DESTINATION include)
diff -Naur a/FindUUID.cmake b/FindUUID.cmake
--- a/FindUUID.cmake	1969-12-31 16:00:00.000000000 -0800
+++ b/FindUUID.cmake	2020-04-30 08:06:34.254079599 -0700
@@ -0,0 +1,43 @@
+#.rst:
+# FindUUID
+# --------
+# Finds the libuuid library
+#
+# This will will define the following variables::
+#
+# UUID_FOUND - system has libuuid
+# UUID_INCLUDE_DIRS - the libuuid include directory
+# UUID_LIBRARIES - the libuuid libraries
+#
+# and the following imported targets::
+#
+#   UUID::UUID   - The libuuid library
+
+if(PKG_CONFIG_FOUND)
+  pkg_check_modules(PC_UUID uuid QUIET)
+endif()
+
+find_path(UUID_INCLUDE_DIR uuid/uuid.h
+                           PATHS ${PC_UUID_INCLUDEDIR})
+find_library(UUID_LIBRARY uuid
+                          PATHS ${PC_UUID_LIBRARY})
+set(UUID_VERSION ${PC_UUID_VERSION})
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(UUID
+                                  REQUIRED_VARS UUID_LIBRARY UUID_INCLUDE_DIR
+                                  VERSION_VAR UUID_VERSION)
+
+if(UUID_FOUND)
+  set(UUID_LIBRARIES ${UUID_LIBRARY})
+  set(UUID_INCLUDE_DIRS ${UUID_INCLUDE_DIR})
+
+  if(NOT TARGET UUID::UUID)
+    add_library(UUID::UUID UNKNOWN IMPORTED)
+    set_target_properties(UUID::UUID PROPERTIES
+                                     IMPORTED_LOCATION "${UUID_LIBRARY}"
+                                     INTERFACE_INCLUDE_DIRECTORIES "${UUID_INCLUDE_DIR}")
+  endif()
+endif()
+
+mark_as_advanced(UUID_INCLUDE_DIR UUID_LIBRARY)
